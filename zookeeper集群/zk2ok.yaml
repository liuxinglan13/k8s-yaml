apiVersion: v1
kind: Service
metadata:
  labels:
    app: zk1
  name: zk1-svc
  namespace: zookeeper
spec:
  clusterIP: None
  ports:
  - port: 2181
    protocol: TCP
    targetPort: 2181
    name: client
  - port: 2888
    protocol: TCP
    targetPort: 2888
    name: leader
  - port: 3888
    protocol: TCP
    targetPort: 3888
    name: leader-election
  selector:
    app: zk1
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zk2
  name: zk2-svc
  namespace: zookeeper
spec:
  clusterIP: None
  ports:
  - port: 2181
    protocol: TCP
    targetPort: 2181
    name: client
  - port: 2888
    protocol: TCP
    targetPort: 2888
    name: leader
  - port: 3888
    protocol: TCP
    targetPort: 3888
    name: leader-election
  selector:
    app: zk2
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: zk3
  name: zk3-svc
  namespace: zookeeper
spec:
  clusterIP: None
  ports:
  - port: 2181
    protocol: TCP
    targetPort: 2181
    name: client
  - port: 2888
    protocol: TCP
    targetPort: 2888
    name: leader
  - port: 3888
    protocol: TCP
    targetPort: 3888
    name: leader-election
  selector:
    app: zk3
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  namespace: zookeeper
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk1
  namespace: zookeeper
spec:
  selector:
    matchLabels:
      app: zk1
  serviceName: zk1-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: zk1
    spec:
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        image: "172.16.130.72/basis/zookeeper"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOO_MY_ID
          value: "1"
        - name: ZOO_SERVERS
          value: server.1=zk1-svc:2888:3888;2181 server.2=zk2-svc:2888:3888;2181 server.3=zk3-svc:2888:3888;2181
        volumeMounts:
        - name: datadir
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      volumeMode: Filesystem
      storageClassName: nfs
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 2G
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk2
  namespace: zookeeper
spec:
  selector:
    matchLabels:
      app: zk2
  serviceName: zk2-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: zk2
    spec:
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        image: "172.16.130.72/basis/zookeeper"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOO_MY_ID
          value: "2"
        - name: ZOO_SERVERS
          value: server.1=zk1-svc:2888:3888;2181 server.2=zk2-svc:2888:3888;2181 server.3=zk3-svc:2888:3888;2181
        volumeMounts:
        - name: datadir
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      volumeMode: Filesystem
      storageClassName: nfs
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 2G
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk3
  namespace: zookeeper
spec:
  selector:
    matchLabels:
      app: zk3
  serviceName: zk3-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: zk3
    spec:
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        image: "172.16.130.72/basis/zookeeper"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        env:
        - name: ZOO_MY_ID
          value: "3"
        - name: ZOO_SERVERS
          value: server.1=zk1-svc:2888:3888;2181 server.2=zk2-svc:2888:3888;2181 server.3=zk3-svc:2888:3888;2181
        volumeMounts:
        - name: datadir
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      volumeMode: Filesystem
      storageClassName: nfs
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 2G
